<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.greennlab.ddul.board.repository.BoardDao">

  <select id="getPage" resultType="Board"><![CDATA[
    SELECT B.ID,
           B.BID,
           B.ORD AS "order",
           B.DEPTH,
           B.GRP AS "group",
           B.TITLE,
           B.USER_ID AS "author.user.username",
           B.AU_NAME AS "author.name",
           B.AU_EMAIL AS "author.email",
           B.SECRET,
           B.ACS_COUNT AS "accessCount",
           B.REMOVAL
    FROM BOARD AS B
           INNER JOIN BOARD_CONTENT AS C ON B.ID = C.ID
    WHERE B.REMOVAL = 'N'
      AND B.GRP = #{group}
      AND (
        #{keyword} IS NULL OR (
              #{searchType} = '1' AND B.AU_NAME LIKE '%' || #{keyword} || '%' OR
              #{searchType} = '2' AND B.TITLE LIKE '%' || #{keyword} || '%' OR
              #{searchType} = '3' AND C.TEXT LIKE '%' || #{keyword} || '%' OR
              #{searchType} IS NULL AND (
                    B.AU_NAME LIKE '%' || #{keyword} || '%' OR
                    B.TITLE LIKE '%' || #{keyword} || '%' OR
                    C.TEXT LIKE '%' || #{keyword} || '%')
        )
      )
  ORDER BY B.BID DESC, B.ORD
    ]]></select>

  <select id="findById" resultType="Board"><![CDATA[
    SELECT ID,
           BID,
           ORD AS "order",
           DEPTH,
           GRP AS "group",
           TITLE,
           USER_ID AS "author.user.username",
           AU_NAME AS "author.name",
           AU_EMAIL AS "author.email",
           SECRET,
           ACS_COUNT AS "accessCount",
           REMOVAL
    FROM BOARD
    WHERE ID = #{id}
    ]]></select>

  <select id="findContentById" resultType="BoardContent"><![CDATA[
    SELECT *
    FROM BOARD_CONTENT
    WHERE ID = #{id}
    ]]></select>

  <insert id="insert">
    <selectKey order="BEFORE" keyProperty="id" resultType="Long">
      SELECT ID_GENERATOR_SQ.nextval FROM dual
    </selectKey>
    <![CDATA[
    INSERT INTO BOARD ( ID
                      , BID
                      , DEPTH
                      , ORD
                      , GRP
                      , TITLE
                      , USER_ID
                      , AU_NAME
                      , AU_EMAIL
                      , AU_PWD
                      , SECRET
                      , CREATED
                      , CREATOR
                      , UPDATED
                      , UPDATER)
    VALUES (#{id},
            NVL(#{bid}, #{id}),
            #{depth},
            #{order},
            #{group},
            #{title},
            #{author.user.id},
            #{author.name},
            #{author.email},
            #{author.password},
            #{secret},
            CURRENT_TIMESTAMP ,
            #{_.username},
            CURRENT_TIMESTAMP ,
            #{_.username})
    ]]>
  </insert>

  <update id="update"><![CDATA[
    UPDATE BOARD
    SET TITLE    = #{title},
        USER_ID  = #{author.user.id},
        AU_NAME  = #{author.name},
        AU_EMAIL = #{author.email},
        AU_PWD   = #{author.password},
        SECRET   = #{secret},
        UPDATED  = CURRENT_TIMESTAMP ,
        UPDATER  = #{_.username}
    WHERE ID = #{id}
    ]]></update>

  <delete id="delete"><![CDATA[
    UPDATE BOARD
    SET REMOVAL = 'Y',
        UPDATED = CURRENT_TIMESTAMP ,
        UPDATER = #{_.username}
    WHERE ID = #{id}
    ]]></delete>


  <update id="updateReplyOrders"><![CDATA[
    UPDATE BOARD
    SET ORD = ORD + 1
    WHERE BID = #{bid}
      AND ORD >= #{order}
    ]]></update>

  <insert id="insertContent"><![CDATA[
    INSERT INTO BOARD_CONTENT (ID, BODY, TEXT, CREATED, CREATOR, UPDATED, UPDATER)
    VALUES (#{id},
            #{content.body},
            #{content.text},
            CURRENT_TIMESTAMP ,
            #{_.username},
            CURRENT_TIMESTAMP ,
            #{_.username})
    ]]></insert>

  <insert id="updateContent"><![CDATA[
    UPDATE BOARD_CONTENT
    SET BODY    = #{content.body},
        TEXT    = #{content.text},
        UPDATED = CURRENT_TIMESTAMP ,
        UPDATER = #{_.username}
    WHERE ID = #{id}
    ]]></insert>

  <select id="findExtrasById" resultType="BoardExtra"><![CDATA[
    SELECT NAME,
           VALUE,
           VALUE2
      FROM BOARD_EXTRA
     WHERE BOARD_ID = #{boardId}
    ]]></select>

  <insert id="updateExtra"><![CDATA[
    MERGE INTO BOARD_EXTRA
    USING ( SELECT 1 FROM DUAL )
    ON (
        BOARD_ID = #{boardId}
        AND NAME = #{name}
       )
    WHEN MATCHED THEN UPDATE SET
        VALUE   = #{value},
        VALUE2  = #{value2},
        UPDATED = CURRENT_TIMESTAMP ,
        UPDATER = #{_.username}
    WHEN NOT MATCHED THEN INSERT (BOARD_ID, NAME, VALUE, VALUE2, CREATOR, UPDATER)
    VALUES (
                #{boardId},
                #{name},
                #{value},
                #{value2},
                #{_.username},
                #{_.username}
           )
    ]]></insert>

  <select id="findCommentsById" resultType="BoardComment"><![CDATA[
    SELECT ID,
           BID,
           DEPTH,
           CONTENT,
           USER_ID,
           AU_NAME,
           AU_EMAIL,
           SECRET
      FROM BOARD_COMMENT
     WHERE REMOVAL = 'N'
       AND BOARD_ID = #{id}
  ORDER BY BID DESC, ORD
    ]]></select>
</mapper>
